// <auto-generated />
using System;
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250830070559_Seed-Products-List")]
    partial class SeedProductsList
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("SpecialTag")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Категория 2",
                            Description = "Повышение широким кадров.",
                            Image = "https://placehold.co/200x150",
                            Name = "Фантастический Кожанный Куртка",
                            Price = 678.14m,
                            SpecialTag = "Рекомендуемое"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Категория 1",
                            Description = "Таким сущности соображения общества повседневной интересный оценить технологий административных реализация.",
                            Image = "https://placehold.co/200x150",
                            Name = "Фантастический Хлопковый Шарф",
                            Price = 50.91m,
                            SpecialTag = "Популярное"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Категория 2",
                            Description = "Профессионального технологий проблем принципов.",
                            Image = "https://placehold.co/200x150",
                            Name = "Практичный Неодимовый Кепка",
                            Price = 712.33m,
                            SpecialTag = "Рекомендуемое"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Категория 2",
                            Description = "Технологий обеспечивает за обеспечение за забывать соответствующих.",
                            Image = "https://placehold.co/200x150",
                            Name = "Потрясающий Деревянный Ботинок",
                            Price = 643.25m,
                            SpecialTag = "Новинка"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Категория 3",
                            Description = "Важные этих понимание работы занимаемых забывать курс.",
                            Image = "https://placehold.co/200x150",
                            Name = "Потрясающий Пластиковый Ножницы",
                            Price = 667.35m,
                            SpecialTag = "Новинка"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Категория 1",
                            Description = "Формированию форм высшего.",
                            Image = "https://placehold.co/200x150",
                            Name = "Маленький Пластиковый Портмоне",
                            Price = 239.93m,
                            SpecialTag = "Рекомендуемое"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Категория 2",
                            Description = "Деятельности мира модели оценить насущным способствует активом широкому за.",
                            Image = "https://placehold.co/200x150",
                            Name = "Великолепный Кожанный Куртка",
                            Price = 729.57m,
                            SpecialTag = "Рекомендуемое"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Категория 3",
                            Description = "Работы участниками определения социально-ориентированный.",
                            Image = "https://placehold.co/200x150",
                            Name = "Эргономичный Гранитный Плащ",
                            Price = 846.64m,
                            SpecialTag = "Популярное"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Категория 3",
                            Description = "Анализа мира опыт нас соображения соответствующей активизации позиции различных правительством.",
                            Image = "https://placehold.co/200x150",
                            Name = "Лоснящийся Неодимовый Ножницы",
                            Price = 884.92m,
                            SpecialTag = "Рекомендуемое"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Категория 2",
                            Description = "Технологий способствует для определения качества развития же высокотехнологичная формирования выполнять.",
                            Image = "https://placehold.co/200x150",
                            Name = "Интеллектуальный Натуральный Плащ",
                            Price = 303.44m,
                            SpecialTag = "Новинка"
                        },
                        new
                        {
                            Id = 11,
                            Category = "Категория 3",
                            Description = "Нами выполнять стороны задача идейные участия соответствующей богатый работы.",
                            Image = "https://placehold.co/200x150",
                            Name = "Потрясающий Пластиковый Стул",
                            Price = 595.52m,
                            SpecialTag = "Популярное"
                        },
                        new
                        {
                            Id = 12,
                            Category = "Категория 2",
                            Description = "Социально-ориентированный прежде повышению актуальность значительной зависит оценить.",
                            Image = "https://placehold.co/200x150",
                            Name = "Свободный Меховой Автомобиль",
                            Price = 628.81m,
                            SpecialTag = "Новинка"
                        },
                        new
                        {
                            Id = 13,
                            Category = "Категория 3",
                            Description = "Системы принципов специалистов правительством процесс проект принимаемых повышение консультация уровня.",
                            Image = "https://placehold.co/200x150",
                            Name = "Маленький Стальной Ножницы",
                            Price = 978.33m,
                            SpecialTag = "Популярное"
                        },
                        new
                        {
                            Id = 14,
                            Category = "Категория 2",
                            Description = "Также специалистов ресурсосберегающих проект.",
                            Image = "https://placehold.co/200x150",
                            Name = "Эргономичный Меховой Компьютер",
                            Price = 169.66m,
                            SpecialTag = "Популярное"
                        },
                        new
                        {
                            Id = 15,
                            Category = "Категория 3",
                            Description = "С материально-технической обуславливает путь забывать демократической деятельности отношении.",
                            Image = "https://placehold.co/200x150",
                            Name = "Интеллектуальный Бетонный Стул",
                            Price = 803.17m,
                            SpecialTag = "Новинка"
                        },
                        new
                        {
                            Id = 16,
                            Category = "Категория 2",
                            Description = "Систему задания с.",
                            Image = "https://placehold.co/200x150",
                            Name = "Практичный Пластиковый Компьютер",
                            Price = 793.19m,
                            SpecialTag = "Рекомендуемое"
                        },
                        new
                        {
                            Id = 17,
                            Category = "Категория 1",
                            Description = "Постоянный вызывает укрепления курс уточнения уровня.",
                            Image = "https://placehold.co/200x150",
                            Name = "Фантастический Меховой Сабо",
                            Price = 522.63m,
                            SpecialTag = "Рекомендуемое"
                        },
                        new
                        {
                            Id = 18,
                            Category = "Категория 3",
                            Description = "Укрепления оценить принимаемых формирования прогресса финансовых соответствующей нас.",
                            Image = "https://placehold.co/200x150",
                            Name = "Невероятный Меховой Берет",
                            Price = 159.82m,
                            SpecialTag = "Рекомендуемое"
                        },
                        new
                        {
                            Id = 19,
                            Category = "Категория 2",
                            Description = "Прогресса внедрения занимаемых.",
                            Image = "https://placehold.co/200x150",
                            Name = "Грубый Резиновый Носки",
                            Price = 745.57m,
                            SpecialTag = "Рекомендуемое"
                        },
                        new
                        {
                            Id = 20,
                            Category = "Категория 3",
                            Description = "Предложений демократической проект проверки условий правительством модели.",
                            Image = "https://placehold.co/200x150",
                            Name = "Маленький Пластиковый Кошелек",
                            Price = 680.75m,
                            SpecialTag = "Рекомендуемое"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Api.Models.AppUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("AppUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
